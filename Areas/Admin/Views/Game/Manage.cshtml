@using LCARS.Areas.Admin.Models
@using LCARS.Data
@using LCARS.Models
@model LCARS.Areas.Admin.Models.GameView
@section Scripts {
    <script src="/local/mindmup-editabletable.js"></script>
    <script>
        var gameId = @Model.GameId;
        var round = @Model.Round;
        var status = '@Model.Status';


        if (status === '@GameStatus.Running') {
            $('#table-sector').editableTableWidget();
            $('#table-slipgate').editableTableWidget();
            @foreach (var location in ViewBag.Locations)
            {
                <text>$('#table-location-@location.LocationId').editableTableWidget();</text>
            }

            $('table td').on('change',
                function(evt, newValue) {
                    let success = false;
                    if ($(this).attr('axis') === 'Sector' || $(this).attr('axis') === 'Slipgate') {
                        const game = {
                            GameId: gameId,
                            [$(this).attr('axis')]: newValue
                        };
                        $.ajax('@Url.Action("UpdateValue", "Game", new {Area = ""})',
                            {
                                type: 'PUT',
                                data: JSON.stringify(game),
                                contentType: 'application/json',
                                async: false,
                                complete: function (jqXHR, textStatus) {
                                    if (jqXHR.responseJSON === true) success = true;
                                    else {
                                        alert(
                                            'Error communicating with the server. Error documented in browser console log.');
                                        console.log(jqXHR.responseText);
                                    }
                                }
                            });
                    } else {
                        const status = {
                            StatusId: $(this).attr('id'),
                            [$(this).attr('axis')]: newValue
                        };
                        $.ajax('@Url.Action("UpdateValue", "Status", new {Area = ""})',
                            {
                                type: 'PUT',
                                data: JSON.stringify(status),
                                contentType: 'application/json',
                                async: false,
                                complete: function (jqXHR, textStatus) {
                                    if (jqXHR.responseJSON === true) success = true;
                                    else {
                                        alert(
                                            'Error communicating with the server. Error documented in browser console log.');
                                        console.log(jqXHR.responseText);
                                    }
                                }
                            });
                    }
                    return success;
                });
        }

        function updateStatus(status) {
            let success = false;
            const game = {
                GameId: gameId,
                Status: status
            };
            $.ajax('@Url.Action("UpdateValue", "Game", new {Area = ""})',
                {
                    type: 'PUT',
                    data: JSON.stringify(game),
                    contentType: 'application/json',
                    async: false,
                    complete: function(jqXHR, textStatus) {
                        if (jqXHR.responseJSON === true) success = true;
                        else {
                            alert(
                                'Error communicating with the server. Error documented in browser console log.');
                            console.log(jqXHR.responseText);
                        }
                    }
                });
            if (success === true)
                document.location.reload();
        }
    </script>
}
<div class="container-fluid p-5">
    @if (Model.Status == GameStatus.Paused)
    {
        <div class="alert alert-warning">Game is currently paused.</div>
    }
    <div class="float-right text-right">
        <h1 class="text-warning">Round: @Model.Round</h1>
        @if (Model.Status == GameStatus.Paused)
        {
            <button class="btn btn-success" onclick="updateStatus('@GameStatus.Running')">Resume Game</button>
            <button class="btn btn-info" onclick="updateStatus('@GameStatus.NextRound')">Next Round</button>
        }
        @if (Model.Status == GameStatus.Running)
        {
            <button class="btn btn-danger" onclick="updateStatus('@GameStatus.Paused')">Pause Game</button>
        }
    </div>
    <h1 class="text-info">@Model.Name</h1>
    <strong>Created:</strong> @Model.Created
    <hr/>
    <div class="row">
        <div class="col-8">
            <div class="row">
                <div class="col-6">
                    <table class="table table-sm" id="table-sector">
                        <tr>
                            <th>Ship Sector</th>
                            <td class="grid-value border-left" axis="Sector">@Model.Sector</td>
                        </tr>
                    </table>
                </div>
                <div class="col-6">
                    <table class="table table-sm" id="table-slipgate">
                        <tr>
                            <th>Slipgate Systems</th>
                            <td class="grid-value border-left" axis="Slipgate">@Model.Slipgate</td>
                        </tr>
                    </table>
                </div>
            </div>
            <div class="row">
                @foreach (var location in ViewBag.Locations)
                {
                    if (string.IsNullOrWhiteSpace(location.Name))
                    {
                        continue;
                    }
                    <div class="col-6">
                        <h3>@location.Name</h3>
                        <div class="row">
                            <div class="col-7">
                                <table class="table table-sm" id="table-location-@location.LocationId">
                                    @foreach (AttributeView attribute in location.Attributes)
                                    {
                                        <tr data-toggle="tooltip" data-placement="top" title="@attribute.Status.Time">
                                            <th>@attribute.Name</th>
                                            <td class="grid-value text-right" axis="TextValue1" id="@attribute.Status.StatusId">@attribute.Status.TextValue1</td>
                                            <td class="grid-value text-right border-left" axis="TextValue2" id="@attribute.Status.StatusId">@attribute.Status.TextValue2</td>
                                        </tr>
                                    }
                                </table>
                            </div>
                            <div class="col-5">
                                @foreach (TeleportView teleport in location.Teleports)
                                {
                                    <div class="card float-left px-1" data-placement="top" title="@teleport.CharacterName" style="width: 5rem;">
                                        <p class="card-text text-truncate">@teleport.PlayerName</p>
                                    </div>
                                }
                            </div>
                        </div>
                    </div>
                }
            </div>
        </div>
        <div class="col-4">
            <h3>Player Actions</h3>
            <table class="table table-sm">
                <tr>
                    <th></th>
                    <th>Character</th>
                    <th>Location</th>
                    <th>Action</th>
                    <th>Variables</th>
                </tr>
                @foreach (PlayerAction action in ViewBag.PlayerActions)
                {
                    <tr>
                        <th scope="row">@action.Player.Name</th>
                        <td>@action.Player.Character.Name</td>
                        <td>@action.Location.Name</td>
                        <td>@action.Attribute.Name</td>
                        <td>@action.On</td>
                    </tr>
                }
            </table>
        </div>
    </div>
</div>